#include "tfa433.h"

volatile bool _avail = false;
volatile uint8_t _buff[_BUFF_SIZE];
volatile uint8_t _buffEnd = 0;

unsigned long _lastPackageArrived;
uint8_t _pin = 0;

#ifdef __TFA_ENABLE_DRY_TEST
// timestamp and pinvalue from sampled test data from logic anlyzer
const PROGMEM uint32_t testData[] = {
	// for  9.0°C/48.2°F at channel 1 (decodes to 42105affe6)
	0, 0, 31429973, 1, 31430487, 0, 31431487, 1, 31432001, 0, 31432991, 1, 31433505, 0, 31434505, 1, 31435019, 0, 31436019, 1, 31436533, 0, 31437524, 1, 31438038, 0, 31439038, 1, 31439552, 0, 31440552, 1, 31441056, 0, 31442056, 1, 31443576, 0, 31444576, 1, 31445091, 0, 31446090, 1, 31447611, 0, 31448601, 1, 31450121, 0, 31451121, 1, 31452641, 0, 31453641, 1, 31455161, 0, 31456161, 1, 31456675, 0, 31457666, 1, 31459186, 0, 31460186, 1, 31461706, 0, 31462706, 1, 31464226, 0, 31465226, 1, 31466746, 0, 31467737, 1, 31468251, 0, 31469251, 1, 31470771, 0, 31471771, 1, 31473291, 0, 31474291, 1, 31475811, 0, 31476801, 1, 31478321, 0, 31479321, 1, 31480841, 0, 31481841, 1, 31482355, 0, 31483355, 1, 31484875, 0, 31485865, 1, 31486379, 0, 31487379, 1, 31487893, 0, 31488893, 1, 31490413, 0, 31491403, 1, 31491918, 0, 31492917, 1, 31494438, 0, 31495437, 1, 31495952, 0, 31496951, 1, 31497456, 0, 31498456, 1, 31498970, 0, 31499970, 1, 31500484, 0, 31501474, 1, 31501988, 0, 31502988, 1, 31503502, 0, 31504502, 1, 31505016, 0, 31506007, 1, 31506521, 0, 31507521, 1, 31508035, 0, 31509035, 1, 31509549, 0, 31510539, 1, 31511053, 0, 31512053, 1, 31513573, 0, 31514573, 1, 31516093, 0, 31517093, 1, 31517598, 0, 31518598, 1, 31519112, 0, 31520111, 1, 31521632, 0, 31523136, 1, 31523641, 0, 31524641, 1, 31525155, 0, 31526155, 1, 31526669, 0, 31527659, 1, 31528173, 0, 31529173, 1, 31529687, 0, 31530687, 1, 31531201, 0, 31532191, 1, 31532705, 0, 31533705, 1, 31534219, 0, 31535219, 1, 31536739, 0, 31537739, 1, 31538243, 0, 31539243, 1, 31540763, 0, 31541763, 1, 31543283, 0, 31544283, 1, 31545803, 0, 31546803, 1, 31548323, 0, 31549313, 1, 31549827, 0, 31550827, 1, 31552347, 0, 31553347, 1, 31554867, 0, 31555858, 1, 31557387, 0, 31558378, 1, 31559898, 0, 31560898, 1, 31561412, 0, 31562411, 1, 31563932, 0, 31564922, 1, 31566452, 0, 31567442, 1, 31568962, 0, 31569962, 1, 31571482, 0, 31572482, 1, 31574002, 0, 31575002, 1, 31575516, 0, 31576506, 1, 31578026, 0, 31579026, 1, 31579540, 0, 31580539, 1, 31581054, 0, 31582044, 1, 31583564, 0, 31584564, 1, 31585078, 0, 31586077, 1, 31587598, 0, 31588597, 1, 31589102, 0, 31590101, 1, 31590616, 0, 31591615, 1, 31592129, 0, 31593129, 1, 31593643, 0, 31594633, 1, 31595148, 0, 31596147, 1, 31596661, 0, 31597661, 1, 31598175, 0, 31599165, 1, 31599679, 0, 31600679, 1, 31601193, 0, 31602193, 1, 31602707, 0, 31603697, 1, 31604212, 0, 31605211, 1, 31606731, 0, 31607731, 1, 31609251, 0, 31610251, 1, 31610756, 0, 31611755, 1, 31612270, 0, 31613269, 1, 31614789, 0, 31616294, 1, 31616798, 0, 31617798, 1, 31618312, 0, 31619312, 1, 31619826, 0, 31620826, 1, 31621331, 0, 31622330, 1, 31622844, 0, 31623844, 1, 31624358, 0, 31625348, 1, 31625862, 0, 31626862, 1, 31627376, 0, 31628376, 1, 31629896, 0, 31630896, 1, 31631400, 0, 31632400, 1, 31633920, 0, 31634920, 1, 31636440, 0, 31637440, 1, 31638960, 0, 31639960, 1, 31641480, 0, 31642470, 1, 31642984, 0, 31643984, 1, 31645504, 0, 31646504, 1, 31648024, 0, 31649024, 1, 31650544, 0, 31651534, 1, 31653054, 0, 31654054, 1, 31654568, 0, 31655568, 1, 31657088, 0, 31658088, 1, 31659608, 0, 31660598, 1, 31662128, 0, 31663118, 1, 31664638, 0, 31665637, 1, 31667158, 0, 31668157, 1, 31668671, 0, 31669661, 1, 31671191, 0, 31672181, 1, 31672695, 0, 31673695, 1, 31674209, 0, 31675209, 1, 31676729, 0, 31677719, 1, 31678233, 0, 31679233, 1, 31680753, 0, 31681753, 1, 31682267, 0, 31683267, 1, 31683772, 0, 31684772, 1, 31685286, 0, 31686285, 1, 31686800, 0, 31687790, 1, 31688304, 0, 31689304, 1, 31689818, 0, 31690818, 1, 31691332, 0, 31692322, 1, 31692836, 0, 31693836, 1, 31694350, 0, 31695350, 1, 31695864, 0, 31696854, 1, 31697369, 0, 31698368, 1, 31699889, 0, 31700888, 1, 31702408, 0, 31703408, 1, 31703913, 0, 31704912, 1, 31705426, 0, 31706426, 1, 31707946, 0,
	// for -6.9°C/19.58*F at channel 1 (decodes to 421845ff43)
	0, 0, 42796559, 1, 42797073, 0, 42798074, 1, 42798579, 0, 42799580, 1, 42800095, 0, 42801096, 1, 42801601, 0, 42802602, 1, 42803116, 0, 42804117, 1, 42804623, 0, 42805624, 1, 42806138, 0, 42807139, 1, 42807644, 0, 42808645, 1, 42810167, 0, 42811159, 1, 42811673, 0, 42812674, 1, 42814196, 0, 42815188, 1, 42816710, 0, 42817711, 1, 42819233, 0, 42820224, 1, 42821746, 0, 42822747, 1, 42823262, 0, 42824254, 1, 42825775, 0, 42826776, 1, 42828298, 0, 42829290, 1, 42830812, 0, 42831813, 1, 42833325, 0, 42834326, 1, 42834841, 0, 42835841, 1, 42836347, 0, 42837348, 1, 42838869, 0, 42839870, 1, 42841383, 0, 42842383, 1, 42843905, 0, 42844906, 1, 42846418, 0, 42847419, 1, 42847934, 0, 42848925, 1, 42850447, 0, 42851448, 1, 42852970, 0, 42853962, 1, 42855484, 0, 42856485, 1, 42856999, 0, 42857991, 1, 42859513, 0, 42860514, 1, 42861028, 0, 42862020, 1, 42862534, 0, 42863535, 1, 42864050, 0, 42865042, 1, 42865556, 0, 42866557, 1, 42867072, 0, 42868063, 1, 42868578, 0, 42869579, 1, 42870093, 0, 42871085, 1, 42871600, 0, 42872601, 1, 42873115, 0, 42874107, 1, 42875628, 0, 42876629, 1, 42877144, 0, 42878136, 1, 42879657, 0, 42880658, 1, 42882171, 0, 42883172, 1, 42884694, 0, 42885695, 1, 42887207, 0, 42888208, 1, 42888723, 0, 42889724, 1, 42890229, 0, 42891735, 1, 42892250, 0, 42893241, 1, 42893756, 0, 42894757, 1, 42895271, 0, 42896263, 1, 42896777, 0, 42897778, 1, 42898293, 0, 42899285, 1, 42899799, 0, 42900800, 1, 42901315, 0, 42902306, 1, 42902821, 0, 42903822, 1, 42905343, 0, 42906335, 1, 42906850, 0, 42907851, 1, 42909372, 0, 42910364, 1, 42911886, 0, 42912887, 1, 42914399, 0, 42915400, 1, 42916922, 0, 42917923, 1, 42918428, 0, 42919429, 1, 42920951, 0, 42921952, 1, 42923464, 0, 42924465, 1, 42925987, 0, 42926988, 1, 42928501, 0, 42929502, 1, 42930016, 0, 42931017, 1, 42931522, 0, 42932523, 1, 42934045, 0, 42935037, 1, 42936559, 0, 42937559, 1, 42939081, 0, 42940073, 1, 42941594, 0, 42942595, 1, 42943110, 0, 42944102, 1, 42945623, 0, 42946624, 1, 42948146, 0, 42949138, 1, 42950659, 0, 42951660, 1, 42952175, 0, 42953166, 1, 42954688, 0, 42955689, 1, 42956204, 0, 42957195, 1, 42957710, 0, 42958711, 1, 42959225, 0, 42960217, 1, 42960731, 0, 42961732, 1, 42962247, 0, 42963238, 1, 42963753, 0, 42964754, 1, 42965268, 0, 42966260, 1, 42966774, 0, 42967775, 1, 42968290, 0, 42969281, 1, 42970803, 0, 42971804, 1, 42972318, 0, 42973310, 1, 42974831, 0, 42975832, 1, 42977354, 0, 42978346, 1, 42979867, 0, 42980868, 1, 42982390, 0, 42983382, 1, 42983896, 0, 42984897, 1, 42985412, 0, 42986908, 1, 42987423, 0, 42988424, 1, 42988929, 0, 42989930, 1, 42990444, 0, 42991445, 1, 42991950, 0, 42992951, 1, 42993466, 0, 42994467, 1, 42994972, 0, 42995973, 1, 42996487, 0, 42997488, 1, 42997993, 0, 42998994, 1, 43000516, 0, 43001517, 1, 43002022, 0, 43003023, 1, 43004544, 0, 43005545, 1, 43007105, 0, 43008058, 1, 43009580, 0, 43010581, 1, 43012093, 0, 43013094, 1, 43013608, 0, 43014609, 1, 43016121, 0, 43017122, 1, 43018643, 0, 43019644, 1, 43021156, 0, 43022157, 1, 43023679, 0, 43024679, 1, 43025185, 0, 43026185, 1, 43026700, 0, 43027701, 1, 43029213, 0, 43030214, 1, 43031735, 0, 43032736, 1, 43034248, 0, 43035249, 1, 43036771, 0, 43037771, 1, 43038286, 0, 43039277, 1, 43040799, 0, 43041800, 1, 43043322, 0, 43044313, 1, 43045835, 0, 43046836, 1, 43047350, 0, 43048342, 1, 43049863, 0, 43050864, 1, 43051378, 0, 43052370, 1, 43052884, 0, 43053885, 1, 43054400, 0, 43055391, 1, 43055906, 0, 43056906, 1, 43057421, 0, 43058412, 1, 43058927, 0, 43059928, 1, 43060442, 0, 43061434, 1, 43061948, 0, 43062949, 1, 43063464, 0, 43064455, 1, 43065976, 0, 43066977, 1, 43067492, 0, 43068483, 1, 43070005, 0, 43071005, 1, 43072527, 0, 43073518, 1, 43075040, 0, 43076040, 1, 43077562, 0, 43078553, 1, 43079068, 0, 43080068, 1, 43080583, 0,
	// for 60.2°C/140.36°F at channel 1 (decodes to 42125aff6a)
	0, 0, 26224991, 1, 26225510, 0, 26226509, 1, 26227019, 0, 26228017, 1, 26228527, 0, 26229525, 1, 26230045, 0, 26231034, 1, 26231553, 0, 26232552, 1, 26233061, 0, 26234060, 1, 26234569, 0, 26235568, 1, 26236087, 0, 26237076, 1, 26238601, 0, 26239600, 1, 26240109, 0, 26241108, 1, 26242632, 0, 26243631, 1, 26245146, 0, 26246144, 1, 26247669, 0, 26248668, 1, 26250182, 0, 26251181, 1, 26251690, 0, 26252689, 1, 26254214, 0, 26255213, 1, 26256727, 0, 26257726, 1, 26259251, 0, 26260240, 1, 26261764, 0, 26262763, 1, 26263272, 0, 26264271, 1, 26265796, 0, 26266795, 1, 26268309, 0, 26269308, 1, 26269827, 0, 26270816, 1, 26272341, 0, 26273339, 1, 26274854, 0, 26275853, 1, 26276372, 0, 26277361, 1, 26278886, 0, 26279884, 1, 26280394, 0, 26281392, 1, 26281912, 0, 26282910, 1, 26284425, 0, 26285424, 1, 26285933, 0, 26286932, 1, 26288456, 0, 26289455, 1, 26289964, 0, 26290963, 1, 26291472, 0, 26292471, 1, 26292991, 0, 26293989, 1, 26294499, 0, 26295497, 1, 26296007, 0, 26297006, 1, 26297515, 0, 26298514, 1, 26299033, 0, 26300032, 1, 26300541, 0, 26301540, 1, 26303055, 0, 26304053, 1, 26304573, 0, 26305562, 1, 26306081, 0, 26307080, 1, 26308594, 0, 26309593, 1, 26310113, 0, 26311101, 1, 26312626, 0, 26313625, 1, 26314134, 0, 26315133, 1, 26316657, 0, 26318155, 1, 26318665, 0, 26319663, 1, 26320183, 0, 26321182, 1, 26321691, 0, 26322690, 1, 26323199, 0, 26324198, 1, 26324707, 0, 26325706, 1, 26326225, 0, 26327224, 1, 26327733, 0, 26328732, 1, 26329241, 0, 26330240, 1, 26331765, 0, 26332754, 1, 26333273, 0, 26334272, 1, 26335786, 0, 26336785, 1, 26338310, 0, 26339309, 1, 26340823, 0, 26341822, 1, 26343347, 0, 26344345, 1, 26344855, 0, 26345853, 1, 26347368, 0, 26348367, 1, 26349891, 0, 26350890, 1, 26352405, 0, 26353403, 1, 26354928, 0, 26355927, 1, 26356436, 0, 26357435, 1, 26358950, 0, 26359948, 1, 26361473, 0, 26362472, 1, 26362981, 0, 26363980, 1, 26365505, 0, 26366503, 1, 26368018, 0, 26369017, 1, 26369526, 0, 26370525, 1, 26372049, 0, 26373048, 1, 26373557, 0, 26374556, 1, 26375065, 0, 26376064, 1, 26377589, 0, 26378587, 1, 26379097, 0, 26380095, 1, 26381620, 0, 26382609, 1, 26383128, 0, 26384127, 1, 26384636, 0, 26385635, 1, 26386144, 0, 26387143, 1, 26387662, 0, 26388651, 1, 26389170, 0, 26390169, 1, 26390678, 0, 26391677, 1, 26392186, 0, 26393185, 1, 26393704, 0, 26394703, 1, 26396218, 0, 26397216, 1, 26397726, 0, 26398725, 1, 26399244, 0, 26400233, 1, 26401757, 0, 26402756, 1, 26403265, 0, 26404264, 1, 26405789, 0, 26406787, 1, 26407297, 0, 26408295, 1, 26409820, 0, 26411318, 1, 26411827, 0, 26412826, 1, 26413336, 0, 26414334, 1, 26414854, 0, 26415852, 1, 26416362, 0, 26417360, 1, 26417870, 0, 26418868, 1, 26419378, 0, 26420376, 1, 26420896, 0, 26421894, 1, 26422404, 0, 26423402, 1, 26424927, 0, 26425916, 1, 26426435, 0, 26427434, 1, 26428949, 0, 26429947, 1, 26431472, 0, 26432460, 1, 26433985, 0, 26434984, 1, 26436508, 0, 26437497, 1, 26438016, 0, 26439015, 1, 26440530, 0, 26441528, 1, 26443053, 0, 26444052, 1, 26445566, 0, 26446565, 1, 26448090, 0, 26449088, 1, 26449598, 0, 26450596, 1, 26452111, 0, 26453110, 1, 26454634, 0, 26455633, 1, 26456142, 0, 26457141, 1, 26458665, 0, 26459654, 1, 26461179, 0, 26462177, 1, 26462687, 0, 26463685, 1, 26465210, 0, 26466209, 1, 26466718, 0, 26467717, 1, 26468226, 0, 26469225, 1, 26470749, 0, 26471748, 1, 26472257, 0, 26473256, 1, 26474771, 0, 26475769, 1, 26476289, 0, 26477287, 1, 26477797, 0, 26478795, 1, 26479305, 0, 26480303, 1, 26480823, 0, 26481811, 1, 26482331, 0, 26483329, 1, 26483839, 0, 26484837, 1, 26485347, 0, 26486345, 1, 26486865, 0, 26487853, 1, 26489378, 0, 26490377, 1, 26490886, 0, 26491885, 1, 26492404, 0, 26493403, 1, 26494917, 0, 26495916, 1, 26496426, 0, 26497424, 1, 26498949, 0, 26499948, 1, 26500457, 0, 26501456, 1, 26502970, 0,
	// for 0.0°C/64.40°F (decodes to 421000ffef)
	0, 0, 28806335, 1, 28806844, 0, 28807844, 1, 28808353, 0, 28809352, 1, 28809862, 0, 28810861, 1, 28811380, 0, 28812370, 1, 28812889, 0, 28813888, 1, 28814398, 0, 28815397, 1, 28815906, 0, 28816906, 1, 28817415, 0, 28818415, 1, 28819939, 0, 28820939, 1, 28821448, 0, 28822448, 1, 28823963, 0, 28824963, 1, 28826487, 0, 28827477, 1, 28829002, 0, 28830001, 1, 28831516, 0, 28832516, 1, 28833025, 0, 28834025, 1, 28835549, 0, 28836549, 1, 28838064, 0, 28839064, 1, 28840579, 0, 28841578, 1, 28843103, 0, 28844102, 1, 28844611, 0, 28845611, 1, 28847126, 0, 28848126, 1, 28849650, 0, 28850640, 1, 28852164, 0, 28853164, 1, 28854679, 0, 28855679, 1, 28857203, 0, 28858203, 1, 28859718, 0, 28860717, 1, 28862232, 0, 28863232, 1, 28864756, 0, 28865746, 1, 28867271, 0, 28868271, 1, 28869786, 0, 28870785, 1, 28872310, 0, 28873309, 1, 28874824, 0, 28875824, 1, 28876333, 0, 28877332, 1, 28877841, 0, 28878841, 1, 28879360, 0, 28880359, 1, 28880868, 0, 28881868, 1, 28882377, 0, 28883377, 1, 28883886, 0, 28884885, 1, 28885404, 0, 28886394, 1, 28886913, 0, 28887903, 1, 28888422, 0, 28889421, 1, 28889930, 0, 28890930, 1, 28891439, 0, 28892439, 1, 28893963, 0, 28894953, 1, 28895472, 0, 28896472, 1, 28896981, 0, 28897980, 1, 28898490, 0, 28899489, 1, 28899998, 0, 28901507, 1, 28902016, 0, 28903016, 1, 28903525, 0, 28904525, 1, 28905034, 0, 28906033, 1, 28906552, 0, 28907552, 1, 28908061, 0, 28909061, 1, 28909570, 0, 28910569, 1, 28911079, 0, 28912078, 1, 28912597, 0, 28913587, 1, 28915111, 0, 28916111, 1, 28916620, 0, 28917620, 1, 28919135, 0, 28920134, 1, 28921658, 0, 28922658, 1, 28924173, 0, 28925172, 1, 28926697, 0, 28927687, 1, 28928205, 0, 28929196, 1, 28930720, 0, 28931719, 1, 28933234, 0, 28934234, 1, 28935758, 0, 28936758, 1, 28938273, 0, 28939272, 1, 28939782, 0, 28940781, 1, 28942306, 0, 28943296, 1, 28944820, 0, 28945820, 1, 28947335, 0, 28948334, 1, 28949859, 0, 28950858, 1, 28952373, 0, 28953373, 1, 28954888, 0, 28955887, 1, 28957412, 0, 28958411, 1, 28959926, 0, 28960925, 1, 28962440, 0, 28963440, 1, 28964964, 0, 28965964, 1, 28967479, 0, 28968478, 1, 28970003, 0, 28970993, 1, 28971512, 0, 28972502, 1, 28973020, 0, 28974020, 1, 28974529, 0, 28975528, 1, 28976038, 0, 28977037, 1, 28977546, 0, 28978546, 1, 28979065, 0, 28980064, 1, 28980574, 0, 28981573, 1, 28982082, 0, 28983082, 1, 28983591, 0, 28984591, 1, 28985109, 0, 28986099, 1, 28986618, 0, 28987618, 1, 28989133, 0, 28990132, 1, 28990641, 0, 28991641, 1, 28992160, 0, 28993150, 1, 28993669, 0, 28994659, 1, 28995178, 0, 28996677, 1, 28997186, 0, 28998186, 1, 28998705, 0, 28999695, 1, 29000214, 0, 29001213, 1, 29001723, 0, 29002722, 1, 29003232, 0, 29004231, 1, 29004740, 0, 29005740, 1, 29006259, 0, 29007249, 1, 29007768, 0, 29008758, 1, 29010283, 0, 29011282, 1, 29011791, 0, 29012791, 1, 29014316, 0, 29015306, 1, 29016830, 0, 29017830, 1, 29019345, 0, 29020345, 1, 29021869, 0, 29022859, 1, 29023378, 0, 29024378, 1, 29025893, 0, 29026892, 1, 29028407, 0, 29029407, 1, 29030931, 0, 29031931, 1, 29033446, 0, 29034446, 1, 29034955, 0, 29035954, 1, 29037479, 0, 29038469, 1, 29039993, 0, 29040993, 1, 29042508, 0, 29043508, 1, 29045032, 0, 29046022, 1, 29047547, 0, 29048546, 1, 29050061, 0, 29051061, 1, 29052585, 0, 29053585, 1, 29055100, 0, 29056099, 1, 29057614, 0, 29058614, 1, 29060138, 0, 29061138, 1, 29062653, 0, 29063652, 1, 29065167, 0, 29066167, 1, 29066686, 0, 29067676, 1, 29068194, 0, 29069194, 1, 29069703, 0, 29070703, 1, 29071212, 0, 29072212, 1, 29072721, 0, 29073720, 1, 29074239, 0, 29075229, 1, 29075748, 0, 29076747, 1, 29077256, 0, 29078256, 1, 29078765, 0, 29079765, 1, 29080274, 0, 29081273, 1, 29081792, 0, 29082792, 1, 29084307, 0, 29085306, 1, 29085815, 0, 29086815, 1, 29087324, 0, 29088323, 1, 29088842, 0, 29089842, 1, 29090351, 0,
	// for 18.0°C/64.40°F (decodes to 4210b4fffd)
	0, 0, 55019573, 1, 55020082, 0, 55021082, 1, 55021591, 0, 55022591, 1, 55023100, 0, 55024099, 1, 55024609, 0, 55025608, 1, 55026127, 0, 55027117, 1, 55027636, 0, 55028636, 1, 55029145, 0, 55030145, 1, 55030654, 0, 55031654, 1, 55033179, 0, 55034169, 1, 55034688, 0, 55035677, 1, 55037202, 0, 55038202, 1, 55039717, 0, 55040717, 1, 55042242, 0, 55043231, 1, 55044756, 0, 55045756, 1, 55046265, 0, 55047265, 1, 55048780, 0, 55049780, 1, 55051305, 0, 55052304, 1, 55053820, 0, 55054819, 1, 55056334, 0, 55057334, 1, 55057843, 0, 55058843, 1, 55060368, 0, 55061367, 1, 55062883, 0, 55063882, 1, 55065398, 0, 55066397, 1, 55067922, 0, 55068912, 1, 55069431, 0, 55070431, 1, 55071946, 0, 55072945, 1, 55073455, 0, 55074454, 1, 55074964, 0, 55075963, 1, 55077488, 0, 55078487, 1, 55078997, 0, 55079996, 1, 55081512, 0, 55082511, 1, 55084036, 0, 55085026, 1, 55085545, 0, 55086544, 1, 55087054, 0, 55088053, 1, 55088562, 0, 55089562, 1, 55090071, 0, 55091071, 1, 55091590, 0, 55092580, 1, 55093099, 0, 55094098, 1, 55094608, 0, 55095607, 1, 55096117, 0, 55097116, 1, 55097626, 0, 55098625, 1, 55099134, 0, 55100134, 1, 55100653, 0, 55101652, 1, 55102162, 0, 55103161, 1, 55103671, 0, 55104670, 1, 55105179, 0, 55106179, 1, 55107704, 0, 55108694, 1, 55109213, 0, 55110712, 1, 55111221, 0, 55112221, 1, 55112740, 0, 55113729, 1, 55114248, 0, 55115248, 1, 55115757, 0, 55116756, 1, 55117266, 0, 55118265, 1, 55118775, 0, 55119774, 1, 55120283, 0, 55121283, 1, 55121802, 0, 55122801, 1, 55124316, 0, 55125316, 1, 55125825, 0, 55126824, 1, 55128349, 0, 55129339, 1, 55130863, 0, 55131863, 1, 55133378, 0, 55134377, 1, 55135902, 0, 55136892, 1, 55137411, 0, 55138411, 1, 55139926, 0, 55140925, 1, 55142440, 0, 55143440, 1, 55144964, 0, 55145964, 1, 55147479, 0, 55148478, 1, 55148988, 0, 55149987, 1, 55151512, 0, 55152502, 1, 55154027, 0, 55155027, 1, 55156542, 0, 55157541, 1, 55159066, 0, 55160056, 1, 55160575, 0, 55161575, 1, 55163090, 0, 55164089, 1, 55164599, 0, 55165598, 1, 55166108, 0, 55167107, 1, 55168632, 0, 55169631, 1, 55170141, 0, 55171140, 1, 55172656, 0, 55173655, 1, 55175180, 0, 55176170, 1, 55176688, 0, 55177688, 1, 55178197, 0, 55179197, 1, 55179706, 0, 55180705, 1, 55181215, 0, 55182214, 1, 55182733, 0, 55183723, 1, 55184242, 0, 55185242, 1, 55185751, 0, 55186750, 1, 55187260, 0, 55188259, 1, 55188768, 0, 55189768, 1, 55190287, 0, 55191277, 1, 55191796, 0, 55192786, 1, 55193305, 0, 55194304, 1, 55194814, 0, 55195813, 1, 55196322, 0, 55197322, 1, 55198847, 0, 55199836, 1, 55200355, 0, 55201855, 1, 55202364, 0, 55203363, 1, 55203882, 0, 55204872, 1, 55205391, 0, 55206391, 1, 55206900, 0, 55207899, 1, 55208409, 0, 55209408, 1, 55209918, 0, 55210917, 1, 55211436, 0, 55212426, 1, 55212945, 0, 55213935, 1, 55215460, 0, 55216459, 1, 55216969, 0, 55217968, 1, 55219493, 0, 55220483, 1, 55222008, 0, 55223007, 1, 55224522, 0, 55225522, 1, 55227037, 0, 55228037, 1, 55228556, 0, 55229555, 1, 55231070, 0, 55232070, 1, 55233585, 0, 55234585, 1, 55236109, 0, 55237099, 1, 55238624, 0, 55239624, 1, 55240133, 0, 55241132, 1, 55242657, 0, 55243647, 1, 55245172, 0, 55246171, 1, 55247686, 0, 55248686, 1, 55250201, 0, 55251200, 1, 55251719, 0, 55252709, 1, 55254234, 0, 55255233, 1, 55255742, 0, 55256742, 1, 55257251, 0, 55258250, 1, 55259775, 0, 55260774, 1, 55261284, 0, 55262283, 1, 55263798, 0, 55264797, 1, 55266322, 0, 55267312, 1, 55267831, 0, 55268830, 1, 55269339, 0, 55270339, 1, 55270848, 0, 55271847, 1, 55272357, 0, 55273356, 1, 55273875, 0, 55274874, 1, 55275384, 0, 55276383, 1, 55276892, 0, 55277892, 1, 55278401, 0, 55279400, 1, 55279919, 0, 55280909, 1, 55281428, 0, 55282427, 1, 55282937, 0, 55283936, 1, 55284445, 0, 55285445, 1, 55285954, 0, 55286953, 1, 55287472, 0, 55288462, 1, 55289987, 0, 55290986, 1, 55291496, 0,
	// for 20.3°C/68.54°F (decodes to 4210cbff5f)
	0, 0, 5120148, 1, 5120668, 0, 5121660, 1, 5122180, 0, 5123172, 1, 5123692, 0, 5124684, 1, 5125194, 0, 5126196, 1, 5126706, 0, 5127708, 1, 5128218, 0, 5129220, 1, 5129730, 0, 5130732, 1, 5131242, 0, 5132234, 1, 5133762, 0, 5134754, 1, 5135264, 0, 5136265, 1, 5137784, 0, 5138785, 1, 5140304, 0, 5141305, 1, 5142823, 0, 5143815, 1, 5145343, 0, 5146335, 1, 5146855, 0, 5147847, 1, 5149365, 0, 5150367, 1, 5151885, 0, 5152886, 1, 5154405, 0, 5155396, 1, 5156924, 0, 5157916, 1, 5158436, 0, 5159428, 1, 5160946, 0, 5161948, 1, 5163466, 0, 5164467, 1, 5165986, 0, 5166987, 1, 5168505, 0, 5169497, 1, 5170017, 0, 5171009, 1, 5171519, 0, 5172521, 1, 5174039, 0, 5175041, 1, 5176559, 0, 5177561, 1, 5178071, 0, 5179072, 1, 5180591, 0, 5181583, 1, 5182103, 0, 5183095, 1, 5183605, 0, 5184606, 1, 5185117, 0, 5186118, 1, 5186629, 0, 5187630, 1, 5188141, 0, 5189142, 1, 5189653, 0, 5190654, 1, 5191164, 0, 5192166, 1, 5192676, 0, 5193668, 1, 5194188, 0, 5195180, 1, 5195690, 0, 5196692, 1, 5198210, 0, 5199211, 1, 5199722, 0, 5200723, 1, 5202241, 0, 5203243, 1, 5203753, 0, 5204745, 1, 5205265, 0, 5206257, 1, 5206777, 0, 5207769, 1, 5208289, 0, 5209280, 1, 5209791, 0, 5211293, 1, 5211813, 0, 5212805, 1, 5213325, 0, 5214316, 1, 5214827, 0, 5215828, 1, 5216338, 0, 5217340, 1, 5217850, 0, 5218852, 1, 5219362, 0, 5220364, 1, 5220874, 0, 5221866, 1, 5222386, 0, 5223378, 1, 5224906, 0, 5225897, 1, 5226408, 0, 5227409, 1, 5228927, 0, 5229929, 1, 5231447, 0, 5232448, 1, 5233966, 0, 5234958, 1, 5236486, 0, 5237478, 1, 5237998, 0, 5238990, 1, 5240508, 0, 5241509, 1, 5243027, 0, 5244029, 1, 5245547, 0, 5246549, 1, 5248067, 0, 5249059, 1, 5249579, 0, 5250571, 1, 5252089, 0, 5253090, 1, 5254609, 0, 5255610, 1, 5257128, 0, 5258130, 1, 5259648, 0, 5260640, 1, 5261160, 0, 5262152, 1, 5262672, 0, 5263664, 1, 5265182, 0, 5266183, 1, 5267702, 0, 5268703, 1, 5269214, 0, 5270215, 1, 5271733, 0, 5272725, 1, 5273245, 0, 5274237, 1, 5274757, 0, 5275748, 1, 5276259, 0, 5277260, 1, 5277771, 0, 5278772, 1, 5279282, 0, 5280284, 1, 5280794, 0, 5281795, 1, 5282306, 0, 5283307, 1, 5283817, 0, 5284819, 1, 5285329, 0, 5286321, 1, 5286841, 0, 5287832, 1, 5289360, 0, 5290352, 1, 5290862, 0, 5291864, 1, 5293382, 0, 5294384, 1, 5294894, 0, 5295895, 1, 5296406, 0, 5297407, 1, 5297917, 0, 5298919, 1, 5299429, 0, 5300421, 1, 5300941, 0, 5302443, 1, 5302953, 0, 5303945, 1, 5304465, 0, 5305457, 1, 5305977, 0, 5306969, 1, 5307479, 0, 5308480, 1, 5308991, 0, 5309992, 1, 5310502, 0, 5311504, 1, 5312014, 0, 5313015, 1, 5313526, 0, 5314527, 1, 5316045, 0, 5317046, 1, 5317557, 0, 5318548, 1, 5320076, 0, 5321068, 1, 5322586, 0, 5323588, 1, 5325106, 0, 5326107, 1, 5327625, 0, 5328627, 1, 5329137, 0, 5330138, 1, 5331657, 0, 5332648, 1, 5334176, 0, 5335168, 1, 5336686, 0, 5337688, 1, 5339206, 0, 5340207, 1, 5340718, 0, 5341719, 1, 5343237, 0, 5344239, 1, 5345757, 0, 5346749, 1, 5348276, 0, 5349268, 1, 5350786, 0, 5351788, 1, 5352298, 0, 5353299, 1, 5353810, 0, 5354811, 1, 5356329, 0, 5357330, 1, 5358849, 0, 5359840, 1, 5360360, 0, 5361352, 1, 5362870, 0, 5363871, 1, 5364382, 0, 5365383, 1, 5365893, 0, 5366895, 1, 5367405, 0, 5368406, 1, 5368917, 0, 5369918, 1, 5370428, 0, 5371430, 1, 5371940, 0, 5372932, 1, 5373452, 0, 5374443, 1, 5374963, 0, 5375955, 1, 5376475, 0, 5377467, 1, 5377977, 0, 5378978, 1, 5380496, 0, 5381498, 1, 5382008, 0, 5383009, 1, 5384528, 0, 5385529, 1, 5386039, 0, 5387031, 1, 5387551, 0, 5388543, 1, 5389063, 0, 5390054, 1, 5390575, 0, 5391566, 1, 5392077, 0,
	// for 46.2°C/115.16°F (decodes to 4211ceff6e)
	0, 0, 56625299, 1, 56625815, 0, 56626807, 1, 56627323, 0, 56628314, 1, 56628830, 0, 56629832, 1, 56630337, 0, 56631339, 1, 56631855, 0, 56632846, 1, 56633362, 0, 56634364, 1, 56634880, 0, 56635871, 1, 56636387, 0, 56637379, 1, 56638903, 0, 56639904, 1, 56640410, 0, 56641412, 1, 56642936, 0, 56643928, 1, 56645452, 0, 56646443, 1, 56647967, 0, 56648969, 1, 56650483, 0, 56651485, 1, 56652000, 0, 56652992, 1, 56654516, 0, 56655508, 1, 56657032, 0, 56658034, 1, 56659548, 0, 56660549, 1, 56662063, 0, 56663065, 1, 56663581, 0, 56664572, 1, 56666096, 0, 56667088, 1, 56668612, 0, 56669614, 1, 56671128, 0, 56672129, 1, 56672645, 0, 56673637, 1, 56674153, 0, 56675154, 1, 56675660, 0, 56676662, 1, 56678186, 0, 56679177, 1, 56680701, 0, 56681693, 1, 56682209, 0, 56683210, 1, 56683716, 0, 56684718, 1, 56685234, 0, 56686225, 1, 56687749, 0, 56688741, 1, 56689257, 0, 56690258, 1, 56690774, 0, 56691765, 1, 56692281, 0, 56693273, 1, 56693789, 0, 56694790, 1, 56695306, 0, 56696298, 1, 56696813, 0, 56697805, 1, 56698321, 0, 56699322, 1, 56699838, 0, 56700830, 1, 56702354, 0, 56703346, 1, 56703861, 0, 56704863, 1, 56705369, 0, 56706370, 1, 56707894, 0, 56708886, 1, 56709402, 0, 56710403, 1, 56710909, 0, 56711911, 1, 56712427, 0, 56713418, 1, 56714942, 0, 56716440, 1, 56716955, 0, 56717947, 1, 56718463, 0, 56719465, 1, 56719980, 0, 56720972, 1, 56721488, 0, 56722479, 1, 56722995, 0, 56723997, 1, 56724512, 0, 56725504, 1, 56726020, 0, 56727012, 1, 56727527, 0, 56728529, 1, 56730043, 0, 56731045, 1, 56731560, 0, 56732552, 1, 56734076, 0, 56735068, 1, 56736592, 0, 56737594, 1, 56739108, 0, 56740109, 1, 56741633, 0, 56742625, 1, 56743140, 0, 56744132, 1, 56745656, 0, 56746658, 1, 56748172, 0, 56749173, 1, 56750697, 0, 56751689, 1, 56753213, 0, 56754205, 1, 56754720, 0, 56755722, 1, 56757236, 0, 56758238, 1, 56759762, 0, 56760753, 1, 56762277, 0, 56763269, 1, 56763785, 0, 56764786, 1, 56765292, 0, 56766294, 1, 56766809, 0, 56767801, 1, 56769325, 0, 56770317, 1, 56771841, 0, 56772842, 1, 56773348, 0, 56774350, 1, 56774865, 0, 56775857, 1, 56776373, 0, 56777374, 1, 56778888, 0, 56779890, 1, 56780406, 0, 56781397, 1, 56781913, 0, 56782915, 1, 56783421, 0, 56784422, 1, 56784938, 0, 56785930, 1, 56786445, 0, 56787447, 1, 56787953, 0, 56788954, 1, 56789470, 0, 56790462, 1, 56790977, 0, 56791979, 1, 56793493, 0, 56794495, 1, 56795011, 0, 56796002, 1, 56796518, 0, 56797510, 1, 56799034, 0, 56800035, 1, 56800541, 0, 56801542, 1, 56802058, 0, 56803050, 1, 56803566, 0, 56804567, 1, 56806081, 0, 56807589, 1, 56808094, 0, 56809096, 1, 56809612, 0, 56810603, 1, 56811119, 0, 56812120, 1, 56812626, 0, 56813628, 1, 56814143, 0, 56815135, 1, 56815651, 0, 56816652, 1, 56817168, 0, 56818160, 1, 56818675, 0, 56819667, 1, 56821191, 0, 56822193, 1, 56822698, 0, 56823700, 1, 56825224, 0, 56826216, 1, 56827740, 0, 56828731, 1, 56830255, 0, 56831257, 1, 56832771, 0, 56833772, 1, 56834288, 0, 56835280, 1, 56836804, 0, 56837795, 1, 56839319, 0, 56840321, 1, 56841835, 0, 56842836, 1, 56844360, 0, 56845352, 1, 56845868, 0, 56846859, 1, 56848383, 0, 56849385, 1, 56850899, 0, 56851900, 1, 56853424, 0, 56854416, 1, 56854932, 0, 56855923, 1, 56856439, 0, 56857440, 1, 56857946, 0, 56858948, 1, 56860472, 0, 56861463, 1, 56862987, 0, 56863979, 1, 56864495, 0, 56865496, 1, 56866012, 0, 56867003, 1, 56867519, 0, 56868521, 1, 56870035, 0, 56871036, 1, 56871552, 0, 56872543, 1, 56873059, 0, 56874051, 1, 56874566, 0, 56875568, 1, 56876084, 0, 56877075, 1, 56877591, 0, 56878583, 1, 56879098, 0, 56880100, 1, 56880616, 0, 56881607, 1, 56882123, 0, 56883115, 1, 56884638, 0, 56885640, 1, 56886146, 0, 56887147, 1, 56887663, 0, 56888654, 1, 56890178, 0, 56891180, 1, 56891686, 0, 56892687, 1, 56893203, 0, 56894194, 1, 56894710, 0, 56895712, 1, 56897226, 0
	//
};
#endif

TFA433::TFA433()
{
	_lastPinValue = 0xFF;
	_lastPackageArrived = 0;
}

void TFA433::start(int pin)
{
	_pin = pin;
	pinMode(_pin, INPUT);
	_init();
	attachInterrupt(digitalPinToInterrupt(_pin), std::bind(&TFA433::_handler, this), CHANGE);
}

void TFA433::stop()
{
	detachInterrupt(digitalPinToInterrupt(_pin));
}

bool TFA433::isDataAvailable()
{
	return _avail;
}

void TFA433::_init()
{
	memset((void *)_buff, 0, _BUFF_SIZE);
	_avail = false;
	_lastLowUsec = 0;
	_buffEnd = 0;
	_syncCount = 0;
	_inPacket = false;
}
void TFA433::_handler()
{
	_handler_internal(micros(), digitalRead(_pin));
}

inline bool TFA433::_handler_internal(unsigned long uSec, uint8_t pinValue)
{
	// sanity for change when sampling from files
	if (pinValue == _lastPinValue)
	{
		return false;
	}
	_lastPinValue = pinValue;

	unsigned long thisPulseLen = uSec - _lastUsec;
	// #ifdef __TFA_ENABLE_DRY_TEST
	// Serial.printf("_handler_internal: uSec: %8ld pin: %d len: %8ld lUsec: %8ld _syncCount: %d inP: %d\r\n", uSec, pinValue, thisPulseLen, _lastUsec, _syncCount, _inPacket);
	// #endif
	_lastUsec = uSec;

	if (thisPulseLen > MAXPULSELEN || thisPulseLen < SYNCPULSELENMIN)
	{
		// time out
		_buffEnd = 0;
		_syncCount = 0;
		_inPacket = false;
		return false;
	}

	if (thisPulseLen < SYNCPULSELENMAX && pinValue == 0)
	{
		_syncCount++;
	}
	if (_syncCount > 2 && !_inPacket)
	{
		// wait for long pulse
		if (thisPulseLen > 1250)
		{
			_inPacket = true;
		}
	}
	if (!_inPacket)
	{
		return false;
	}
	if (pinValue == 0)
	{
		if (uSec - _lastLowUsec > 2000)
		{
			_buff[_buffEnd / 8] &= ~(1 << (7 - (_buffEnd % 8)));
		}
		else
		{
			_buff[_buffEnd / 8] |= (1 << (7 - (_buffEnd % 8)));
		}
		_buffEnd++;
		_lastLowUsec = uSec;
	}
	if (_buffEnd == _PAK_SIZE)
	{
		_syncCount = 0;
		_inPacket = false;
		_buffEnd = 0;
		_lastLowUsec = uSec - 3000;

		int checksumFromMessage = _buff[4];
		int checksumComputed = _checksum(_buff, 4);
#ifdef __TFA_ENABLE_DRY_TEST
		Serial.printf("_handler_internal: checksums -->  m: %02x vs c: %02x --> %s\r\n", checksumFromMessage, checksumComputed, checksumFromMessage == checksumComputed ? "match" : "error");
#endif
		if (checksumFromMessage == checksumComputed)
		{
			uint8_t channel = ((_buff[0] >> 2) & 0b00000011) + 1;
			uint8_t id = ((_buff[0] << 4) & 0b11110000) | ((_buff[1] >> 4) & 0b00001111);
			int16_t sign = _buff[1] & 0b00001000 ? -1 : 1;
			int16_t temperature = sign * (((_buff[1] & 0b00000111) << 8) | _buff[2]);
#ifdef __TFA_ENABLE_DRY_TEST
			Serial.printf("_handler_internal: received id: %d channel: %d temperature: %d.%d\r\n", id, channel, sign * (abs(temperature) / 10), abs(temperature) % 10);
#endif
			// any changes?
			if (channel != this->_values.channel || id != this->_values.id || temperature != this->_values.temperature)
			{
				this->_values.channel = channel;
				this->_values.id = id;
				this->_values.temperature = temperature;
				_avail = true; // notify

#ifdef __TFA_ENABLE_DRY_TEST
				Serial.printf("_handler_internal: data is new -> set _avail to true\r\n");
#endif
			}

			return true;
		}
	}
	if (_buffEnd >= _PAK_SIZE)
	{
		// try again later...
		_buffEnd = 0;
		return false;
	}

	return false;
}

void TFA433::getData(uint8_t &id, uint8_t &channel, int16_t &temperature)
{
	id = this->_values.id;
	channel = this->_values.channel;
	temperature = this->_values.temperature;
	_avail = false;
}

tfaResult TFA433::getData()
{
	tfaResult result;
	getData(result.id, result.channel, result.temperature);
	return result;
}

/*
	Based on crc8 from https://github.com/lucsmall/BetterWH2/blob/master/BetterWH2.ino#L276

	Still got a result from reveng -w8 -sF 42105affe6 421845ff43 42125aff6a 421000ffef 4210b4fffd 4210cbff5f 4211ceff6e
width=8  poly=0x31  init=0x00  refin=false  refout=false  xorout=0x00  check=0xa2  residue=0x00  name=(none)*/
uint8_t TFA433::_checksum(uint8_t *addr, uint8_t len)
{
	uint8_t crc = 0;

	// Indicated changes are from reference CRC-8 function in OneWire library
	while (len--)
	{
		uint8_t inbyte = *addr++;
		for (uint8_t i = 8; i; i--)
		{
			uint8_t mix = (crc ^ inbyte) & 0x80; // changed from & 0x01
			crc <<= 1;							 // changed from right shift
			if (mix)
				crc ^= 0x31; // changed from 0x8C;
			inbyte <<= 1;	 // changed from right shift
		}
	}
	return crc;
}

#ifdef __TFA_ENABLE_DRY_TEST
void TFA433::_play_dry()
{
	_init();

	Serial.printf("Dry play starting... %d samples\r\n", sizeof(testData) / sizeof(uint32_t) / 2);

	for (int i = 0; i < sizeof(testData) / sizeof(uint32_t) / 2; i++)
	{
		// Serial.printf("Sample %d syncCount: %d _buffEnd %d\r\n", i, _syncCount, _buffEnd);
		if (_handler_internal(testData[i * 2], testData[i * 2 + 1]))
		{
			Serial.printf("Data reveiced at sample %d : ", i);
			for (int buffp = 0; buffp < _BUFF_SIZE; buffp++)
			{
				Serial.printf("%02x", _buff[buffp]);
			}
			Serial.println();
		}
		// for (int buffp = 0; buffp < _BUFF_SIZE; buffp++)
		// {
		// 	Serial.printf("%d", _buff[buffp]);
		// }
		// Serial.println();
	}
	Serial.println("Done Playback");
}
#endif